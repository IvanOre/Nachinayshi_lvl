package Nasledovanie_extends;

/**
 * Собака это тоже животное Анимал. Конкретное. Она умеет есть и спать тоже.
 * Собака расширяет функционал класса Анимал.Собака более узкое понятие чем животное.
 *
 * Собака extends(расширяет) класс Анимал. Это значит собака наследуется от класса Анимал.Анимал родительский класс
 * Дали понять джаве через extends ,что собака является Анимал и может eat & sleep.
 *
 * Dog теперь наследует все методы и поля класса Animal.
 * Но собака может иметь и свои методы,наряду с теми,которые унаследовала от родительского класса.
 * Например только собака умеет гавкать. Создали метод bark() в классе Dog
 *
 * Так же мы можем переопределять методы наследуемые от родителей.
 * Сделаем так что бы наша собака ела как то особенно. переопределим родительский метод eat()
 *
 * public void eat(){ появляется значок override(переопределение метода класса Анимал)
 *
 *     }
 *     Сигнатура метода одинаковая и джава рассматривает это как переопределение метода.
 *     Значит этот метод не актуален и мы его заменяем своим методом в классе потомке Dog
 *
 *     Наследовали и поле name из родителя Animal/
 *     но если оно будет приватное в родителе,то мы не сможем его использовать без геттеров и сеттеров
 */
public class Dog extends Animal{

    public void eat(){
        System.out.println("Dog is eating");

    }
    public void bark(){
        System.out.println("I am barking..");
    }
    public void showName(){
        System.out.println();

    }
}
